name: Build, Test & Deploy

on:
  push:
    branches:
      - main
      - development

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: tests
  POSTGRES_HOST: localhost
  POSTGRES_POST: 5432
  FLOWBUILD_URL: http://localhost:3000

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tests
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - name: migrations
        run: npm run migrations:local
      - name: seeds
        run: npm run seeds:local
      - name: tests
        run: npm run test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  version: 
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - name: Get version from github tag before release step
        id: initversion
        run: echo "version=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
      - name: Release to GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_NAME: bot-flowbuilld
          GIT_AUTHOR_EMAIL: bot.flowbuild@gmail.com
          GIT_COMMITTER_NAME: bot-flowbuilld
          GIT_COMMITTER_EMAIL: bot.flowbuild@gmail.com
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: npm run release
      - name: Get version from github tag after release step
        id: extractver
        run: echo "version=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
      - name: Create Pull Request with updated package files
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: 'chore(release): ${{ steps.extractver.outputs.version }}'
          committer: bot-flowbuilld <bot.flowbuild@gmail.com>
          author: bot-flowbuilld <bot.flowbuild@gmail.com>
          title: 'chore(release): ${{ steps.extractver.outputs.version }}'
          body: 'Version bump in package.json and package-lock.json for release [${{ steps.extractver.outputs.version }}](https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }})'
          branch: version-bump/${{ steps.extractver.outputs.version }}
    outputs:
      version: ${{ steps.extractver.outputs.version }}

  build:
    name: 'Build image on DockerHub'
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Print Version
        run: echo "Using version ${{ needs.version.outputs.version }}"
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push version
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: 'flowbuild/test-server:${{ needs.version.outputs.version }}'      
      - name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: flowbuild/test-server:latest
