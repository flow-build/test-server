openapi: '3.0.0'
info:
  version: 1.2.0
  title: Test Server
paths:
  /:
    get:
      tags:
      - HealthCheck
      summary: Health Check
      description: 
        Check health status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  version:
                    type: string
              example:
                {
                  "message": "Tests Server running",
                  "version": "1.0.0"
                }
        '500':
          description: Internal Server Error
  /workflows/{id}/paths:
    get:
      tags:
      - Workflows / Paths
      summary: Get All Paths By Workflow ID
      description: 
        Get all possible paths for a specific Workflow ID
      parameters:
        - in: path
          name: id
          description: Workflow id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    workflow_id:
                      type: string
                      format: uuid
                    workflow_name:
                      type: string
                    name:
                      type: string
                    nodes:
                      type: array
                      items:
                        type: string
                    steps:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
              example:
                [
                  {
                    "id": "38e1d039-39c1-4a48-adb3-736eee1d771e",
                    "workflow_id": "8a126b08-f5e2-48a8-b913-d201ac6ca409",
                    "workflow_name": "Simple BP",
                    "name": "Simple BP_1",
                    "nodes": [
                      "START",
                      "CHECK-ACTOR",
                      "ORDER-PIZZA",
                      "TAKE-ORDER",
                      "PREPARE-PIZZA",
                      "BRING-PIZZA",
                      "RECEIVE-PIZZA",
                      "END"
                    ],
                    "steps": 8,
                    "created_at": "2022-11-04T23:15:56.302Z",
                    "updated_at": "2022-11-04T23:15:56.302Z"
                  }
                ]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Workflow not found"
                }
        '500':
          description: Internal Server Error
    delete:
      tags:
      - Workflows / Paths
      summary: Delete All Paths By Workflow ID
      description: 
        Delete all paths for a specific Workflow ID
      parameters:
        - in: path
          name: id
          description: Workflow id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid uuid"
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Workflow not found"
                }
        '500':
          description: Internal Server Error
  /paths/{id}:
    patch:
      tags:
      -  Paths
      summary: Update Path Name
      description: 
        Update a specific path name by the path id
      parameters:
        - in: path
          name: id
          description: Path id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Path name
            example:
              {
                "name": "Happy Path"
              }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  workflow_id:
                    type: string
                    format: uuid
                  workflow_name:
                    type: string
                  name:
                    type: string
                  nodes:
                    type: array
                    items:
                      type: string
                  steps:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
              example:
                {
                  "id": "38e1d039-39c1-4a48-adb3-736eee1d771e",
                  "workflow_id": "8a126b08-f5e2-48a8-b913-d201ac6ca409",
                  "workflow_name": "Simple BP",
                  "name": "Happy Path",
                  "nodes": [
                    "START",
                    "CHECK-ACTOR",
                    "ORDER-PIZZA",
                    "TAKE-ORDER",
                    "PREPARE-PIZZA",
                    "BRING-PIZZA",
                    "RECEIVE-PIZZA",
                    "END"
                  ],
                  "steps": 8,
                  "created_at": "2022-11-04T23:15:56.302Z",
                  "updated_at": "2022-11-04T23:31:36.300Z"
                }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid Request Body",
                  "errors": [
                    {
                      "field": "",
                      "message": "must have required property 'name'"
                    }
                  ]
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Workflow not found"
                }
        '500':
          description: Internal Server Error
  /paths/calculate:
    post:
      tags:
      - Paths
      summary: Calculate Paths By Blueprint (Optionally saves)
      description: 
        Calculate paths for a given blueprint (Saves on test server database if 
        strategy=persist and a workflow_id and worflow name is given)
      parameters:
        - in: query
          name: strategy
          description: Strategy of request
          schema:
            type: string
            enum: ['persist']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [blueprint_spec]
              properties:
                workflow_id:
                  type: string
                  format: uuid
                name:
                  type: string
                created_at:
                  type: string
                  format: date-time
                description:
                  type: string
                version:
                  type: integer
                hash:
                  type: [string, null]
                isLatest:
                  type: boolean
                blueprint_spec:
                  type: object
                  required: [nodes]
                  properties:
                    lanes:
                      type: array
                      itmes:
                        type: object
                    nodes:
                      type: array
                      items: 
                        type: object
                        required: [id, next, type]
                        properties:
                          id:
                            type: string
                          next:
                            type: string
                          type:
                            type: string
                    prepare:
                      type: array
                    environment:
                      type: object
                    requirements:
                      type: array
                  additionalProperties: false
              additionalProperties: false
            example:
              {
                "created_at": "2022-09-09T17:45:07.366Z",
                "name": "test_workflow",
                "description": "Workflow to run tests",
                "version": 1,
                "hash": null,
                "blueprint_spec": {
                  "lanes": [
                    {
                      "id": "1",
                      "name": "the_only_lane",
                      "rule": [
                          "fn",
                          [
                              "&",
                              "args"
                          ],
                          true
                      ]
                    }
                  ],
                  "nodes": [
                    {
                      "id": "1",
                      "name": "Start node",
                      "next": "2",
                      "type": "Start",
                      "lane_id": "1",
                      "parameters": {
                          "input_schema": {}
                      }
                    },
                    {
                      "id": "2",
                      "name": "User Task",
                      "next": "3",
                      "type": "UserTask",
                      "lane_id": "1",
                      "parameters": {
                        "input": {
                          "dates": {
                            "$ref": "bag.dates"
                          },
                          "uuids": {
                            "$ref": "bag.uuids"
                          }
                        },
                        "action": "do something"
                      }
                    },
                    {
                      "id": "3",
                      "name": "Set To Bag Task",
                      "next": "4",
                      "type": "SystemTask",
                      "lane_id": "1",
                      "category": "SetToBag",
                      "parameters": {
                        "input": {
                          "n_js": {
                            "$ref": "result.n_js"
                          },
                          "keyword": {
                            "$ref": "result.keyword"
                          },
                          "n_interp": {
                            "$ref": "result.n_interp"
                          }
                        }
                      }
                    },
                    {
                      "id": "4",
                      "name": "Scripted Task",
                      "next": "5",
                      "type": "ScriptTask",
                      "lane_id": "1",
                      "parameters": {
                        "input": {
                          "n_interp": {
                            "$ref": "bag.n_interp"
                          }
                        },
                        "script": {
                          "type": "js",
                          "package": "test_workflow_package",
                          "function": "lisp_test_task"
                        }
                      }
                    },
                    {
                      "id": "5",
                      "name": "Set To Bag Task",
                      "next": "6",
                      "type": "SystemTask",
                      "lane_id": "1",
                      "category": "SetToBag",
                      "parameters": {
                        "input": {
                          "dates": {
                            "$ref": "result.dates"
                          }
                        }
                      }
                    },
                    {
                      "id": "6",
                      "name": "Set To Bag Task",
                      "next": "7",
                      "type": "SystemTask",
                      "lane_id": "1",
                      "category": "SetToBag",
                      "parameters": {
                        "input": {
                          "uuids": {
                            "$ref": "result.uuids"
                          }
                        }
                      }
                    },
                    {
                      "id": "7",
                      "name": "Flow node",
                      "next": {
                        "end": "8",
                        "default": "2"
                      },
                      "type": "Flow",
                      "lane_id": "1",
                    "parameters": {
                        "input": {
                          "keyword": {
                            "$ref": "bag.keyword"
                          }
                        }
                      }
                    },
                    {
                      "id": "8",
                      "name": "Finish node",
                      "next": null,
                      "type": "Finish",
                      "lane_id": "1"
                    }
                  ],
                  "prepare": [],
                  "environment": {},
                  "requirements": [
                    "core",
                    "test_workflow_package"
                  ]
                },
                "isLatest": true
              }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    workflow_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    nodes:
                      type: array
                      items:
                        type: string
                    steps:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
              example:
                [
                  {
                    "id": "42d02308-6bab-40cd-87b4-aa601d5cc828",
                    "workflow_id": "8fc66458-1137-4c1a-9aef-5dcdca9a19f6",
                    "workflow_name": "test_workflow",
                    "name": "test_workflow_1",
                    "nodes": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8"
                    ],
                    "steps": 8,
                    "created_at": "2022-09-22T00:35:12.277Z",
                    "updated_at": "2022-09-22T00:35:12.277Z"
                  }
                ]
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                totalPaths:
                    type: integer
                paths:
                  type: array
                  items:
                    type: object
                    properties:
                      id: 
                        type: integer
                      name: 
                        type: string
                      steps:
                        type: integer
                      nodes:
                        type: array
                        items:
                          type: string
              example:
                {
                  "totalPaths": 1,
                  "paths": [
                    {
                      "id": 0,
                      "name": "1->8",
                      "steps": 8,
                      "nodes": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8"
                        ]
                    }
                  ]
                }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid Request Body",
                  "errors": [
                    {
                      "field": "",
                      "message": "must have required property 'blueprint_spec'"
                    }
                  ]
                }
        '500':
          description: Internal Server Error
  /workflows/{id}/paths/save:
    post:
      tags:
      - Workflows / Paths
      summary: Save Paths By Workflow ID
      description: 
        Save paths for a specific workflow id from flowbuild server
      parameters:
        - in: path
          name: id
          description: Workflow id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    workflow_id:
                      type: string
                      format: uuid
                    workflow_name:
                      type: string
                    name:
                      type: string
                    nodes:
                      type: array
                      items:
                        type: string
                    steps:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
              example:
                [
                  {
                    "id": "4102e803-0638-4d9d-95ed-360ea348d668",
                    "workflow_id": "d373bef0-1152-11ea-9576-9584815cab84",
                    "workflow_name": "test_workflow",
                    "name": "test_workflow_1",
                    "nodes": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8"
                    ],
                    "steps": 8,
                    "created_at": "2022-09-22T00:40:38.306Z",
                    "updated_at": "2022-09-22T00:40:38.306Z"
                  }
                ]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Paths already exists for workflow_id: 8fc66458-1137-4c1a-9aef-5dcdca9a19f6"
                }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Workflow not found"
                }
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Flowbuild server unavailable"
                }
        '500':
          description: Internal Server Error